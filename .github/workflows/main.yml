name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events.
  push: {}
  pull_request: {}
  # schedule:
  #   # Run daily to catch breakages in new Rust versions as well as new cargo audit findings.
  #   - cron: '0 16 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.rust_os.os }}

    strategy:
      fail-fast: false
      matrix:
        rust_os:
          - { rust: 1.70.0, os: ubuntu-22.04 }
          - { rust: stable, os: ubuntu-latest }
          - { rust: beta, os: ubuntu-latest }
          - { rust: nightly, os: ubuntu-latest }

    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_os.rust }}
          override: true
          components: clippy, rustfmt
          target: x86_64-unknown-linux-gnu

      - name: Run tests
        env:
          KODIK_API_KEY: ${{ secrets.KODIK_API_KEY }}
        run: cargo test --tests --examples
      - name: Doc tests
        env:
          KODIK_API_KEY: ${{ secrets.KODIK_API_KEY }}
        run: cargo test --doc
      - name: Test with all features enabled
        env:
          KODIK_API_KEY: ${{ secrets.KODIK_API_KEY }}
        run: cargo test --all-features

      - name: Check fmt
        if: ${{ matrix.rust_os.rust == '1.70.0' }}
        run: cargo fmt --all -- --check

      - name: Clippy
        if: ${{ matrix.rust_os.rust == '1.70.0' }}
        run: cargo clippy --all --all-features -- --deny warnings

      - name: Audit
        if: ${{ matrix.rust_os.rust == 'stable' }}
        run: |
          cargo install --force cargo-audit
          cargo audit
